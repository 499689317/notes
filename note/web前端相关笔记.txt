
///////////////
// 2015/10/28
///////////////
1.web上的视频
在web上直到今天大多数视频(音频)都是通过插件(如：Flash)来显示的
2.h5提供了两种在客户端丰储数据的新方法：
	localStorage---没有时间限制的数据存储
	sessionStorage-针对一个sessionStorage的数据存储
之前这些都是由cookie完成的，但是cookie不适合大量数据的存储，因为它们由每个对服务器的请求来传递，这使得cookie速度很慢而且效率也不高
h5使用JavaScript来存储和访问数据
localStorage方法存储的数据没有时间限制，不会过期
sessionStorage方法存储数据当用户流览器关闭后，数据会被删除
3.h5使用应用程序缓存(Application Cache)
	1.离线流览-用户可在应用离线时使用它们
	2.速度-已缓存资源加载得更快
	3.减少服务器负载-浏览器将只从服务器下载更新过或理改过的资源
<html mainfest="/缓存文件"-----mainfest文件的建议文件扩展名是：.appcache
mainfest文件需要配置正确的MIME-type,"text/cache-mainfest",必须在web服务器上进行配置

//////////////
// 2015/10/29
//////////////
dom与css与js互相操作
dom:---css
	document
js:getElementById()

//////////////
// 2015/10/30
//////////////
1.在h5中定义样式有3种方式：
	1.通过<link/>元素包含外部样式表文件
	2.使用<style/>元素定义嵌入式样式
	3.使用style特性定义针对特定元素的样式

//////////////
// css基础
//////////////
//2015/10/27
1.样式通常保存在外部的.css文件中，通过公公编辑css文档，外部样式表使你有能力同时改变站点中所有的页面布局和外观。
2.样式优先权：
	1.浏览器缺省设置
	2.外部样式表
	3.内部样式表(位于<head>标签内部)
	4.内联样式(在HTML元素内部，优先权最高)
3.选择器(selector)---HTML元素
	selector{property:value;....}
	//这里要对每一个选择器的属性熟记---每一个属性所对应的改变
	selector1,selector2......{property:value;....}//选择器可以分组用逗号分开
	样式继承：子元素会遵循父元素的样式--如果特别子元素不想遵循，抽出来单独写
4.id选择器(#id{property:value;......}----意味着每一个HTML元素都有一个id属性
	派生性------可拓展
5.类选择器(.class{property:value;.....}---意味着每一个HTML元素都有一个class属性)
	派生性------可拓展
6.属性选择器(不仅局限于class和id属性)
	---只有规定了!DOCTYPE时，IE7和IE8才支持属性选择器---IE6及更低版本不支持属性选择
	[属性名]{property:value;.....}
	属性选择器对不带有class与id属性的表单设置样式非常有用
7.创建css
	1.外部样式表：
		在文档的头部<head></head>内部使用<link>标签链接到样式表
		.css文件中不能包含任何html标签
	2.内部样式表：
		当单个文档需要特殊样式时，就应该使用内部样式表
		使用<style>标签在文档头部<head></head>定义内部样式表
	3.内联样式
		在相关标签内使用(style)属性，style属性可以包含任何css属性



----模型样式----

1.背景(background)
background-color:colorvalue背景颜色
2.文本(text)
text-
letter-
3.字体(font)
font-
4.链接()
a:link/*未被访问的链接*/
a:visited/*已访问的链接*/
a:hover/*鼠标指针位于链接上方*/
a:active/*链接被点击*/
/*a:hover必须位于a:link和a:visited之后
  a:active必须位于a:hover之后*/
5.列表(list-style)
6.表格(table)
7.轮廓(outline)


-------框模型---------
框模型概念：
	-----------------------------
	-         padding(内边距)   -
	-      -------------        -
	-      -           -        -
	-      - element   -        -
	-      -           -        -
	-      -           -        -
	-      -------------        -
	-                           -
	-----------------------------
element:元素
padding:内边距(填充)非负值，顺时针设置
border:边框(制作表格)
margin:外边距(空白)可负值，外边框合并可减少占用空间


---------选择器-----------
最常见的css选择器是HTML/XML元素选择器，文档元素是最基本的选择器

在HTML类选择器中，一个class值可能包含一个词列表，各词用空格分隔
与类选择器不同，ID选择器会使用一次，而且仅一次

----------css3---------------
通过css3过渡，我们可以不使用Flash动画或JavaScript的情况下，当无素从一种样式变换为另一种样式时为元素添加效果
要实现这一点，必须规定两项内容：
1.规定你希望把效果添加到哪一个css属性上
2.规定效果的时长

//操作cookie的对象
var cookie={};
//读取
cookie.gv=function(name){
    var reg=new RegExp("^(.*[=& ])?"+name+"=([^&^;^=]*)[&;]?.*$","i");
    if(reg.test(document.cookie)){
    return document.cookie.replace(reg,"$2");}else{return null;}
};
//设置
cookie.sv=function(name,value,expmin,path){
    var c=new StringBuilder(name);
    c.add("=");c.add(value);
    if(expmin){
        var exp=new Date();
        exp.setTime(exp.getTime()+expmin*1000);
        c.add(";expires=");c.add(exp.toGMTString());
    }
    c.add(";path=/");//cookie的path设置没有处理
    document.cookie=c.tostring();
};
//删除
cookie.del=function(name){
    cookie.sv(name,"",-1);
};
